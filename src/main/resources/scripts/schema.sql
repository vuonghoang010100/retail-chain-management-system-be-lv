
create table batch (
                       exp date,
                       mfg date,
                       create_time timestamp(6),
                       id bigint generated by default as identity,
                       product_id bigint,
                       purchase_amount bigint,
                       purchase_price bigint not null,
                       quantity bigint not null,
                       store_id bigint,
                       update_time timestamp(6),
                       primary key (id)
);

create table bill (
                      create_time timestamp(6),
                      employee_id bigint,
                      id bigint generated by default as identity,
                      total bigint,
                      update_time timestamp(6),
                      vendor_id bigint,
                      note varchar(255),
                      payment_status varchar(255) not null check (payment_status in ('PAID','UNPAID')),
                      primary key (id)
);

create table bill_purchase (
                               Bill_id bigint not null,
                               purchases_id bigint not null unique,
                               primary key (Bill_id, purchases_id)
);

create table category (
                          create_time timestamp(6),
                          id bigint generated by default as identity,
                          update_time timestamp(6),
                          description varchar(255),
                          name varchar(255) not null unique,
                          primary key (id)
);

create table contract (
                          end_date date not null,
                          latest_purchase_date date,
                          next_purchase_date date,
                          period integer not null,
                          start_date date not null,
                          create_time timestamp(6),
                          id bigint generated by default as identity,
                          update_time timestamp(6),
                          vendor_id bigint,
                          note varchar(255),
                          pdf_url varchar(255),
                          status varchar(255) check (status in ('ACTIVE','INACTIVE')),
                          primary key (id)
);

create table customer (
                          dob date,
                          create_time timestamp(6),
                          id bigint generated by default as identity,
                          rewardPoint bigint,
                          update_time timestamp(6),
                          address varchar(255),
                          district varchar(255),
                          email varchar(255) unique,
                          full_name varchar(255) not null unique,
                          gender varchar(255) check (gender in ('MALE','FEMALE')),
                          note varchar(255),
                          phone varchar(255) not null unique,
                          province varchar(255),
                          primary key (id)
);

create table employee (
                          allStore boolean,
                          dob date,
                          create_time timestamp(6),
                          id bigint generated by default as identity,
                          update_time timestamp(6),
                          address varchar(255),
                          district varchar(255),
                          email varchar(255) not null unique,
                          full_name varchar(255) not null,
                          gender varchar(255) check (gender in ('MALE','FEMALE')),
                          note varchar(255),
                          password varchar(255) not null,
                          phone varchar(255) unique,
                          province varchar(255),
                          status varchar(255) check (status in ('ACTIVE','INACTIVE')),
                          primary key (id)
);

create table employee_has_role (
                                   employee_id bigint not null,
                                   roles_id bigint not null,
                                   primary key (employee_id, roles_id)
);

create table employee_work_in_store (
                                        employee_id bigint not null,
                                        store_id bigint not null,
                                        primary key (employee_id, store_id)
);

create table inventory (
                           create_time timestamp(6),
                           employee_id bigint,
                           id bigint generated by default as identity,
                           store_id bigint,
                           update_time timestamp(6),
                           primary key (id)
);

create table inventory_detail (
                                  batch_id bigint,
                                  create_time timestamp(6),
                                  db_quantity bigint,
                                  difference_quantity bigint,
                                  id bigint generated by default as identity,
                                  inventory_id bigint,
                                  product_id bigint,
                                  real_quantity bigint,
                                  update_time timestamp(6),
                                  primary key (id)
);

create table invoice (
                         create_time timestamp(6),
                         customer_id bigint,
                         employee_id bigint,
                         id bigint generated by default as identity,
                         order_id bigint unique,
                         store_id bigint,
                         total bigint,
                         update_time timestamp(6),
                         payment_status varchar(255) not null check (payment_status in ('PAID','UNPAID')),
                         primary key (id)
);

create table order_detail (
                              done boolean,
                              sale_date date,
                              batch_id bigint,
                              create_time timestamp(6),
                              id bigint generated by default as identity,
                              order_id bigint,
                              price bigint,
                              product_id bigint,
                              quantity bigint,
                              store_id bigint,
                              sub_total bigint,
                              update_time timestamp(6),
                              primary key (id)
);

create table order_use_promote (
                                   discount bigint,
                                   id bigint generated by default as identity,
                                   order_id bigint,
                                   promote_id bigint,
                                   primary key (id)
);

create table orders (
                        create_time timestamp(6),
                        customer_id bigint,
                        discount bigint,
                        employee_id bigint,
                        id bigint generated by default as identity,
                        pre_tax bigint,
                        store_id bigint,
                        sub_total bigint,
                        tax bigint,
                        tax_percentage bigint,
                        total bigint,
                        update_time timestamp(6),
                        status varchar(255) check (status in ('PENDING','DELIVERING','COMPLETE','CANCEL')),
                        primary key (id)
);

create table orders_order_use_promote (
                                          Order_id bigint not null,
                                          usePromotes_id bigint not null unique,
                                          primary key (Order_id, usePromotes_id)
);

create table permission (
                            create_time timestamp(6),
                            update_time timestamp(6),
                            description varchar(255),
                            name varchar(255) not null,
                            primary key (name)
);

create table product (
                         category_id bigint,
                         create_time timestamp(6),
                         id bigint generated by default as identity,
                         price bigint not null,
                         update_time timestamp(6),
                         brand varchar(255) not null,
                         description varchar(255),
                         image_url varchar(255),
                         name varchar(255) not null unique,
                         note varchar(255),
                         sku varchar(255) not null unique,
                         status varchar(255) check (status in ('ACTIVE','INACTIVE')),
                         unit varchar(255) not null,
                         primary key (id)
);

create table promote (
                         all_store boolean,
                         end_date date,
                         start_date date,
                         amount bigint,
                         create_time timestamp(6),
                         discount_price bigint,
                         employee_id bigint,
                         id bigint generated by default as identity,
                         max_discount bigint,
                         min_amount_required bigint,
                         min_quantity_required bigint,
                         percentage bigint,
                         product_id bigint,
                         quantity bigint,
                         update_time timestamp(6),
                         description varchar(255),
                         name varchar(255) not null unique,
                         status varchar(255) check (status in ('ACTIVE','INACTIVE')),
                         type varchar(255) check (type in ('PERCENTAGE','AMOUNT','DISCOUNTPRODUCT')),
                         primary key (id)
);

create table promote_on_store (
                                  promote_id bigint not null,
                                  store_id bigint not null,
                                  primary key (promote_id, store_id)
);

create table purchase (
                          received_date date,
                          use_contract boolean not null,
                          bill_id bigint,
                          contract_id bigint,
                          create_time timestamp(6),
                          employee_id bigint,
                          id bigint generated by default as identity,
                          store_id bigint,
                          total bigint,
                          update_time timestamp(6),
                          vendor_id bigint,
                          note varchar(255),
                          payment_status varchar(255) not null check (payment_status in ('PAID','UNPAID')),
                          receive_status varchar(255) not null check (receive_status in ('NOT_RECEIVED','PART_RECEIVED','RECEIVED')),
                          status varchar(255) not null check (status in ('DRAFT','PENDING','COMPLETE','CANCEL')),
                          primary key (id)
);

create table purchase_detail (
                                 exp date,
                                 mfg date,
                                 batch_id bigint unique,
                                 create_time timestamp(6),
                                 id bigint generated by default as identity,
                                 product_id bigint,
                                 purchase_amount bigint not null,
                                 purchase_id bigint,
                                 purchase_price bigint not null,
                                 received_amount bigint,
                                 sub_total bigint not null,
                                 update_time timestamp(6),
                                 primary key (id)
);

create table role (
                      create_time timestamp(6),
                      id bigint generated by default as identity,
                      update_time timestamp(6),
                      description varchar(255),
                      name varchar(255) not null unique,
                      primary key (id)
);

create table role_permissions (
                                  role_id bigint not null,
                                  permission_name varchar(255) not null,
                                  primary key (role_id, permission_name)
);

create table setting (
                         tax integer,
                         id bigint generated by default as identity,
                         primary key (id)
);

create table store (
                       create_time timestamp(6),
                       id bigint generated by default as identity,
                       update_time timestamp(6),
                       address varchar(255) not null,
                       district varchar(255) not null,
                       email varchar(255) unique,
                       full_name varchar(255) not null unique,
                       name varchar(255) not null unique,
                       note varchar(255),
                       phone varchar(255) unique,
                       province varchar(255) not null,
                       status varchar(255) check (status in ('ACTIVE','INACTIVE')),
                       primary key (id)
);

create table transfer (
                          employee_id bigint,
                          from_store_id bigint,
                          id bigint generated by default as identity,
                          to_store_id bigint,
                          primary key (id)
);

create table transfer_detail (
                                 from_batch_id bigint,
                                 id bigint generated by default as identity,
                                 product_id bigint,
                                 quantity bigint,
                                 to_batch_id bigint,
                                 transfer_id bigint,
                                 primary key (id)
);

create table vendor (
                        create_time timestamp(6),
                        id bigint generated by default as identity,
                        update_time timestamp(6),
                        address varchar(255),
                        district varchar(255),
                        email varchar(255) unique,
                        full_name varchar(255) not null unique,
                        note varchar(255),
                        phone varchar(255) unique,
                        province varchar(255),
                        status varchar(255) check (status in ('ACTIVE','INACTIVE')),
                        primary key (id)
);

alter table if exists batch
    add constraint fk_batch_on_product
        foreign key (product_id)
            references product;

alter table if exists batch
    add constraint fk_batch_on_store
        foreign key (store_id)
            references store;

alter table if exists bill
    add constraint fk_bill_on_employee
        foreign key (employee_id)
            references employee;

alter table if exists bill
    add constraint fk_bill_on_vendor
        foreign key (vendor_id)
            references vendor;

alter table if exists bill_purchase
    add constraint FKfeyant1ik15oicwg9e2prsewv
        foreign key (purchases_id)
            references purchase;

alter table if exists bill_purchase
    add constraint FKh35n4wol3sc8erwfof26si5cp
        foreign key (Bill_id)
            references bill;

alter table if exists contract
    add constraint fk_contract_on_vendor
        foreign key (vendor_id)
            references vendor;

alter table if exists employee_has_role
    add constraint fk_employee_has_role_on_role
        foreign key (roles_id)
            references role;

alter table if exists employee_has_role
    add constraint fk_employee_has_role_on_employee
        foreign key (employee_id)
            references employee;

alter table if exists employee_work_in_store
    add constraint fk_employee_work_in_store_on_store
        foreign key (store_id)
            references store;

alter table if exists employee_work_in_store
    add constraint fk_employee_work_in_store_on_employee
        foreign key (employee_id)
            references employee;

alter table if exists inventory
    add constraint fk_inventory_on_employee
        foreign key (employee_id)
            references employee;

alter table if exists inventory
    add constraint fk_inventory_on_store
        foreign key (store_id)
            references store;

alter table if exists inventory_detail
    add constraint fk_inventory_detail_on_batch
        foreign key (batch_id)
            references batch;

alter table if exists inventory_detail
    add constraint fk_inventory_detail_on_inventory
        foreign key (inventory_id)
            references inventory;

alter table if exists inventory_detail
    add constraint fk_inventory_detail_on_product
        foreign key (product_id)
            references product;

alter table if exists invoice
    add constraint fk_invoice_on_customer
        foreign key (customer_id)
            references customer;

alter table if exists invoice
    add constraint fk_invoice_on_employee
        foreign key (employee_id)
            references employee;

alter table if exists invoice
    add constraint fk_invoice_on_order
        foreign key (order_id)
            references orders;

alter table if exists invoice
    add constraint fk_invoice_on_store
        foreign key (store_id)
            references store;

alter table if exists order_detail
    add constraint fk_order_detail_on_batch
        foreign key (batch_id)
            references batch;

alter table if exists order_detail
    add constraint fk_order_detail_on_orders
        foreign key (order_id)
            references orders;

alter table if exists order_detail
    add constraint fk_order_detail_on_product
        foreign key (product_id)
            references product;

alter table if exists order_detail
    add constraint fk_order_detail_on_store
        foreign key (store_id)
            references store;

alter table if exists order_use_promote
    add constraint fk_order_use_promote_on_order
        foreign key (order_id)
            references orders;

alter table if exists order_use_promote
    add constraint fk_order_use_promote_on_promote
        foreign key (promote_id)
            references promote;

alter table if exists orders
    add constraint fk_order_on_customer
        foreign key (customer_id)
            references customer;

alter table if exists orders
    add constraint fk_order_on_employee
        foreign key (employee_id)
            references employee;

alter table if exists orders
    add constraint fk_order_on_store
        foreign key (store_id)
            references store;

alter table if exists orders_order_use_promote
    add constraint FKqm3rm632e0u7nfv7a9ksikchu
        foreign key (usePromotes_id)
            references order_use_promote;

alter table if exists orders_order_use_promote
    add constraint FK9tn87enexipa0vac4vcw8uq1i
        foreign key (Order_id)
            references orders;

alter table if exists product
    add constraint fk_product_category
        foreign key (category_id)
            references category;

alter table if exists promote
    add constraint fk_promote_on_employee
        foreign key (employee_id)
            references employee;

alter table if exists promote
    add constraint fk_promote_on_product
        foreign key (product_id)
            references product;

alter table if exists promote_on_store
    add constraint promote_on_store_on_store
        foreign key (store_id)
            references store;

alter table if exists promote_on_store
    add constraint promote_on_store_on_promote
        foreign key (promote_id)
            references promote;

alter table if exists purchase
    add constraint fk_purchase_on_bill
        foreign key (bill_id)
            references bill;

alter table if exists purchase
    add constraint fk_purchase_on_contract
        foreign key (contract_id)
            references contract;

alter table if exists purchase
    add constraint fk_purchase_on_employee
        foreign key (employee_id)
            references employee;

alter table if exists purchase
    add constraint fk_purchase_on_store
        foreign key (store_id)
            references store;

alter table if exists purchase
    add constraint fk_purchase_on_vendor
        foreign key (vendor_id)
            references vendor;

alter table if exists purchase_detail
    add constraint fk_purchase_detail_on_batch
        foreign key (batch_id)
            references batch;

alter table if exists purchase_detail
    add constraint fk_purchase_detail_on_product
        foreign key (product_id)
            references product;

alter table if exists purchase_detail
    add constraint fk_purchase_detail_on_purchase
        foreign key (purchase_id)
            references purchase;

alter table if exists role_permissions
    add constraint FK5apxdynankvq5vbor6crl42g7
        foreign key (permission_name)
            references permission;

alter table if exists role_permissions
    add constraint FKlodb7xh4a2xjv39gc3lsop95n
        foreign key (role_id)
            references role;

alter table if exists transfer
    add constraint fk_transfer_on_employee
        foreign key (employee_id)
            references employee;

alter table if exists transfer
    add constraint fk_transfer_on_from_store
        foreign key (from_store_id)
            references store;

alter table if exists transfer
    add constraint fk_transfer_on_to_store
        foreign key (to_store_id)
            references store;

alter table if exists transfer_detail
    add constraint fk_transfer_detail_on_from_batch
        foreign key (from_batch_id)
            references batch;

alter table if exists transfer_detail
    add constraint fk_transfer_detail_on_product
        foreign key (product_id)
            references product;

alter table if exists transfer_detail
    add constraint fk_transfer_detail_on_to_batch
        foreign key (to_batch_id)
            references batch;

alter table if exists transfer_detail
    add constraint fk_transfer_detail_on_transfer
        foreign key (transfer_id)
            references transfer;
